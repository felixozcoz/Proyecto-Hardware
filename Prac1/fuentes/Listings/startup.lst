


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* STARTUP.S: Startup file for Blinky Example          
                                             */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */ 
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2005-2006 Keil Software. All rights re
                       served.               */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/******************************************************
                       ***********************/
   12 00000000         
   13 00000000         
   14 00000000         ;/*
   15 00000000         ; *  The STARTUP.S code is executed after CPU Reset. Thi
                       s file may be 
   16 00000000         ; *  translated with the following SET symbols. In uVisi
                       on these SET 
   17 00000000         ; *  symbols are entered under Options - ASM - Define.
   18 00000000         ; *
   19 00000000         ; *  REMAP: when set the startup code initializes the re
                       gister MEMMAP 
   20 00000000         ; *  which overwrites the settings of the CPU configurat
                       ion pins. The 
   21 00000000         ; *  startup and interrupt vectors are remapped from:
   22 00000000         ; *     0x00000000  default setting (not remapped)
   23 00000000         ; *     0x40000000  when RAM_MODE is used
   24 00000000         ; *
   25 00000000         ; *  RAM_MODE: when set the device is configured for cod
                       e execution
   26 00000000         ; *  from on-chip RAM starting at address 0x40000000. 
   27 00000000         ; */
   28 00000000         
   29 00000000         
   30 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   31 00000000         
   32 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   33 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   34 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   35 00000000 00000013 
                       Mode_SVC



ARM Macro Assembler    Page 2 


                               EQU              0x13
   36 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   37 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
   38 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F
   39 00000000         
   40 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   41 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   42 00000000         
   43 00000000         
   44 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   45 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   46 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
   47 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   48 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   49 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   50 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   51 00000000         ;// </h>
   52 00000000         
   53 00000000 00000000 
                       UND_Stack_Size
                               EQU              0x00000000
   54 00000000 00000400 
                       SVC_Stack_Size
                               EQU              0x00000400
   55 00000000 00000000 
                       ABT_Stack_Size
                               EQU              0x00000000
   56 00000000 00000000 
                       FIQ_Stack_Size
                               EQU              0x00000000
   57 00000000 00000080 
                       IRQ_Stack_Size
                               EQU              0x00000080
   58 00000000 00000400 
                       USR_Stack_Size
                               EQU              0x00000400
   59 00000000         
   61 00000000 00000880 
                       Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
 + USR_Stack_Size)
   62 00000000         
   63 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   64 00000000         Stack_Mem
                               SPACE            Stack_Size
   65 00000880         
   66 00000880 00000880 



ARM Macro Assembler    Page 3 


                       Stack_Top
                               EQU              Stack_Mem + Stack_Size
   67 00000880         
   68 00000880         
   69 00000880         ;// <h> Heap Configuration
   70 00000880         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
   71 00000880         ;// </h>
   72 00000880         
   73 00000880 00000000 
                       Heap_Size
                               EQU              0x00000000
   74 00000880         
   75 00000880                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   76 00000000         Heap_Mem
                               SPACE            Heap_Size
   77 00000000         
   78 00000000         
   79 00000000         ; VPBDIV definitions
   80 00000000 E01FC100 
                       VPBDIV  EQU              0xE01FC100  ; VPBDIV Address
   81 00000000         
   82 00000000         ;// <e> VPBDIV Setup
   83 00000000         ;// <i> Peripheral Bus Clock Rate
   84 00000000         ;//   <o1.0..1>   VPBDIV: VPB Clock
   85 00000000         ;//               <0=> VPB Clock = CPU Clock / 4
   86 00000000         ;//               <1=> VPB Clock = CPU Clock
   87 00000000         ;//               <2=> VPB Clock = CPU Clock / 2
   88 00000000         ;//   <o1.4..5>   XCLKDIV: XCLK Pin
   89 00000000         ;//               <0=> XCLK Pin = CPU Clock / 4
   90 00000000         ;//               <1=> XCLK Pin = CPU Clock
   91 00000000         ;//               <2=> XCLK Pin = CPU Clock / 2
   92 00000000         ;// </e>
   93 00000000 00000000 
                       VPBDIV_SETUP
                               EQU              0
   94 00000000 00000000 
                       VPBDIV_Val
                               EQU              0x00000000
   95 00000000         
   96 00000000         
   97 00000000         ; Phase Locked Loop (PLL) definitions
   98 00000000 E01FC080 
                       PLL_BASE
                               EQU              0xE01FC080  ; PLL Base Address
   99 00000000 00000000 
                       PLLCON_OFS
                               EQU              0x00        ; PLL Control Offse
                                                            t
  100 00000000 00000004 
                       PLLCFG_OFS
                               EQU              0x04        ; PLL Configuration
                                                             Offset
  101 00000000 00000008 
                       PLLSTAT_OFS
                               EQU              0x08        ; PLL Status Offset
                                                            
  102 00000000 0000000C 
                       PLLFEED_OFS



ARM Macro Assembler    Page 4 


                               EQU              0x0C        ; PLL Feed Offset
  103 00000000 00000001 
                       PLLCON_PLLE
                               EQU              (1<<0)      ; PLL Enable
  104 00000000 00000002 
                       PLLCON_PLLC
                               EQU              (1<<1)      ; PLL Connect
  105 00000000 0000001F 
                       PLLCFG_MSEL
                               EQU              (0x1F<<0)   ; PLL Multiplier
  106 00000000 00000060 
                       PLLCFG_PSEL
                               EQU              (0x03<<5)   ; PLL Divider
  107 00000000 00000400 
                       PLLSTAT_PLOCK
                               EQU              (1<<10)     ; PLL Lock Status
  108 00000000         
  109 00000000         ;// <e> PLL Setup
  110 00000000         ;//   <o1.0..4>   MSEL: PLL Multiplier Selection
  111 00000000         ;//               <1-32><#-1>
  112 00000000         ;//               <i> M Value
  113 00000000         ;//   <o1.5..6>   PSEL: PLL Divider Selection
  114 00000000         ;//               <0=> 1   <1=> 2   <2=> 4   <3=> 8
  115 00000000         ;//               <i> P Value
  116 00000000         ;// </e>
  117 00000000 00000001 
                       PLL_SETUP
                               EQU              1
  118 00000000 00000024 
                       PLLCFG_Val
                               EQU              0x00000024
  119 00000000         
  120 00000000         
  121 00000000         ; Memory Accelerator Module (MAM) definitions
  122 00000000 E01FC000 
                       MAM_BASE
                               EQU              0xE01FC000  ; MAM Base Address
  123 00000000 00000000 
                       MAMCR_OFS
                               EQU              0x00        ; MAM Control Offse
                                                            t
  124 00000000 00000004 
                       MAMTIM_OFS
                               EQU              0x04        ; MAM Timing Offset
                                                            
  125 00000000         
  126 00000000         ;// <e> MAM Setup
  127 00000000         ;//   <o1.0..1>   MAM Control
  128 00000000         ;//               <0=> Disabled
  129 00000000         ;//               <1=> Partially Enabled
  130 00000000         ;//               <2=> Fully Enabled
  131 00000000         ;//               <i> Mode
  132 00000000         ;//   <o2.0..2>   MAM Timing
  133 00000000         ;//               <0=> Reserved  <1=> 1   <2=> 2   <3=> 
                       3
  134 00000000         ;//               <4=> 4         <5=> 5   <6=> 6   <7=> 
                       7
  135 00000000         ;//               <i> Fetch Cycles
  136 00000000         ;// </e>



ARM Macro Assembler    Page 5 


  137 00000000 00000001 
                       MAM_SETUP
                               EQU              1
  138 00000000 00000002 
                       MAMCR_Val
                               EQU              0x00000002
  139 00000000 00000004 
                       MAMTIM_Val
                               EQU              0x00000004
  140 00000000         
  141 00000000         
  142 00000000         ; Area Definition and Entry Point
  143 00000000         ;  Startup Code must be linked first at Address at which
                        it expects to run.
  144 00000000         
  145 00000000                 AREA             RESET, CODE, READONLY
  146 00000000                 ARM
  147 00000000         
  148 00000000         
  149 00000000         ; Exception Vectors
  150 00000000         ;  Mapped to Address 0.
  151 00000000         ;  Absolute addressing mode must be used.
  152 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
  153 00000000         
  154 00000000 E59FF018 
                       Vectors LDR              PC, Reset_Addr
  155 00000004 E59FF018        LDR              PC, Undef_Addr
  156 00000008 E59FF018        LDR              PC, SWI_Addr
  157 0000000C E59FF018        LDR              PC, PAbt_Addr
  158 00000010 E59FF018        LDR              PC, DAbt_Addr
  159 00000014 E1A00000        NOP                          ; Reserved Vector 
  160 00000018         ;               LDR     PC, IRQ_Addr
  161 00000018 E51FFFF0        LDR              PC, [PC, #-0x0FF0] ; Vector fro
                                                            m VicVectAddr
  162 0000001C E59FF018        LDR              PC, FIQ_Addr
  163 00000020         
  164 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
  165 00000024 00000000 
                       Undef_Addr
                               DCD              Undef_Handler
  166 00000028 00000000 
                       SWI_Addr
                               DCD              SWI_Handler
  167 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbt_Handler
  168 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbt_Handler
  169 00000034 00000000        DCD              0           ; Reserved Address 
                                                            
  170 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQ_Handler
  171 0000003C 00000000 
                       FIQ_Addr



ARM Macro Assembler    Page 6 


                               DCD              FIQ_Handler
  172 00000040         
  173 00000040 EAFFFFFE 
                       Undef_Handler
                               B                Undef_Handler
  174 00000044 EAFFFFFE 
                       SWI_Handler
                               B                SWI_Handler
  175 00000048 EAFFFFFE 
                       PAbt_Handler
                               B                PAbt_Handler
  176 0000004C EAFFFFFE 
                       DAbt_Handler
                               B                DAbt_Handler
  177 00000050 EAFFFFFE 
                       IRQ_Handler
                               B                IRQ_Handler
  178 00000054 EAFFFFFE 
                       FIQ_Handler
                               B                FIQ_Handler
  179 00000058         
  180 00000058         
  181 00000058         ; Reset Handler
  182 00000058         
  183 00000058                 EXPORT           Reset_Handler
  184 00000058         Reset_Handler
  185 00000058         
  186 00000058         
  187 00000058         ; Setup VPBDIV
  188 00000058                 IF               VPBDIV_SETUP <> 0
  192                          ENDIF
  193 00000058         
  194 00000058         
  195 00000058         ; Setup PLL
  196 00000058                 IF               PLL_SETUP <> 0
  197 00000058 E59F00A0        LDR              R0, =PLL_BASE
  198 0000005C E3A010AA        MOV              R1, #0xAA
  199 00000060 E3A02055        MOV              R2, #0x55
  200 00000064         
  201 00000064         ;  Configure and Enable PLL
  202 00000064 E3A03024        MOV              R3, #PLLCFG_Val
  203 00000068 E5803004        STR              R3, [R0, #PLLCFG_OFS]
  204 0000006C E3A03001        MOV              R3, #PLLCON_PLLE
  205 00000070 E5803000        STR              R3, [R0, #PLLCON_OFS]
  206 00000074 E580100C        STR              R1, [R0, #PLLFEED_OFS]
  207 00000078 E580200C        STR              R2, [R0, #PLLFEED_OFS]
  208 0000007C         
  209 0000007C         ;  Wait until PLL Locked
  210 0000007C E5903008 
                       PLL_Loop
                               LDR              R3, [R0, #PLLSTAT_OFS]
  211 00000080 E2133B01        ANDS             R3, R3, #PLLSTAT_PLOCK
  212 00000084 0AFFFFFC        BEQ              PLL_Loop
  213 00000088         
  214 00000088         ;  Switch to PLL Clock
  215 00000088 E3A03003        MOV              R3, #(PLLCON_PLLE:OR:PLLCON_PLL
C)
  216 0000008C E5803000        STR              R3, [R0, #PLLCON_OFS]
  217 00000090 E580100C        STR              R1, [R0, #PLLFEED_OFS]



ARM Macro Assembler    Page 7 


  218 00000094 E580200C        STR              R2, [R0, #PLLFEED_OFS]
  219 00000098                 ENDIF                        ; PLL_SETUP
  220 00000098         
  221 00000098         
  222 00000098         ; Setup MAM
  223 00000098                 IF               MAM_SETUP <> 0
  224 00000098 E59F0064        LDR              R0, =MAM_BASE
  225 0000009C E3A01004        MOV              R1, #MAMTIM_Val
  226 000000A0 E5801004        STR              R1, [R0, #MAMTIM_OFS]
  227 000000A4 E3A01002        MOV              R1, #MAMCR_Val
  228 000000A8 E5801000        STR              R1, [R0, #MAMCR_OFS]
  229 000000AC                 ENDIF                        ; MAM_SETUP
  230 000000AC         
  231 000000AC         
  232 000000AC         ; Memory Mapping (when Interrupt Vectors are in RAM)
  233 000000AC E01FC040 
                       MEMMAP  EQU              0xE01FC040  ; Memory Mapping Co
                                                            ntrol
  234 000000AC                 IF               :DEF:REMAP
  242                          ENDIF
  243 000000AC         
  244 000000AC         
  245 000000AC         ; Initialise Interrupt System
  246 000000AC         ;  ...
  247 000000AC         
  248 000000AC         
  249 000000AC         ; Setup Stack for each mode
  250 000000AC         
  251 000000AC E59F0054        LDR              R0, =Stack_Top
  252 000000B0         
  253 000000B0         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
  254 000000B0 E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
  255 000000B4 E1A0D000        MOV              SP, R0
  256 000000B8 E2400000        SUB              R0, R0, #UND_Stack_Size
  257 000000BC         
  258 000000BC         ;  Enter Abort Mode and set its Stack Pointer
  259 000000BC E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
  260 000000C0 E1A0D000        MOV              SP, R0
  261 000000C4 E2400000        SUB              R0, R0, #ABT_Stack_Size
  262 000000C8         
  263 000000C8         ;  Enter FIQ Mode and set its Stack Pointer
  264 000000C8 E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
  265 000000CC E1A0D000        MOV              SP, R0
  266 000000D0 E2400000        SUB              R0, R0, #FIQ_Stack_Size
  267 000000D4         
  268 000000D4         ;  Enter IRQ Mode and set its Stack Pointer
  269 000000D4 E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit
  270 000000D8 E1A0D000        MOV              SP, R0
  271 000000DC E2400080        SUB              R0, R0, #IRQ_Stack_Size
  272 000000E0         
  273 000000E0         ;  Enter User Mode and set its Stack Pointer
  274 000000E0 E321F010        MSR              CPSR_c, #Mode_USR
  275 000000E4 E1A0D000        MOV              SP, R0
  276 000000E8 E24DAB01        SUB              SL, SP, #USR_Stack_Size



ARM Macro Assembler    Page 8 


  277 000000EC         
  278 000000EC         ;  Enter Supervisor Mode and set its Stack Pointer
  279 000000EC E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
  280 000000F0 E1A0D000        MOV              SP, R0
  281 000000F4 E2400B01        SUB              R0, R0, #SVC_Stack_Size
  282 000000F8         
  283 000000F8         
  284 000000F8         ; Enter the C code
  285 000000F8         
  286 000000F8                 IMPORT           __main
  287 000000F8 E59F000C        LDR              R0, =__main
  288 000000FC E12FFF10        BX               R0
  289 00000100         
  290 00000100         
  291 00000100         ; User Initial Stack & Heap
  292 00000100 E01FC080 
              E01FC000 
              00000000 
              00000000         AREA             |.text|, CODE, READONLY
  293 00000000         
  294 00000000                 IMPORT           __use_two_region_memory
  295 00000000                 EXPORT           __user_initial_stackheap
  296 00000000         __user_initial_stackheap
  297 00000000         
  298 00000000 E59F0050        LDR              R0, =  Heap_Mem
  299 00000004 E59F1050        LDR              R1, =(Stack_Mem + USR_Stack_Siz
e)
  300 00000008 E59F2048        LDR              R2, = (Heap_Mem +      Heap_Siz
e)
  301 0000000C E59F304C        LDR              R3, = Stack_Mem
  302 00000010 E12FFF1E        BX               LR
  303 00000014         
  304 00000014                 EXPORT           Switch_to_PLL
  305 00000014         Switch_to_PLL
  306 00000014 E59F0048        LDR              R0, =PLL_BASE
  307 00000018 E3A010AA        MOV              R1, #0XAA
  308 0000001C E3A02055        MOV              R2, #0X55
  309 00000020         ; Configure and Enable PLL
  310 00000020 E3A03024        MOV              R3, #PLLCFG_Val
  311 00000024 E5803004        STR              R3, [R0, #PLLCFG_OFS]
  312 00000028 E3A03001        MOV              R3, #PLLCON_PLLE
  313 0000002C E5803000        STR              R3, [R0, #PLLCON_OFS]
  314 00000030 E580100C        STR              R1, [R0, #PLLFEED_OFS]
  315 00000034 E580200C        STR              R2, [R0, #PLLFEED_OFS]
  316 00000038         ;    ; Wait until PLL Locked
  317 00000038 E5903008 
                       PLL_Loop2
                               LDR              R3, [R0, #PLLSTAT_OFS]
  318 0000003C E2133B01        ANDS             R3, R3, #PLLSTAT_PLOCK
  319 00000040 0AFFFFFC        BEQ              PLL_Loop2
  320 00000044         
  321 00000044 E3A03003        MOV              R3, #(PLLCON_PLLE:OR:PLLCON_PLL
C)
  322 00000048 E5803000        STR              R3, [R0, #PLLCON_OFS]
  323 0000004C E580100C        STR              R1, [R0, #PLLFEED_OFS]
  324 00000050 E580200C        STR              R2, [R0, #PLLFEED_OFS]
  325 00000054 E12FFF1E        BX               LR
  326 00000058         



ARM Macro Assembler    Page 9 


  327 00000058                 END
              00000000 
              00000400 
              00000000 
              E01FC080 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\startup.d -o.\objects\startup.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\A
RM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --pre
define="__UVISION_VERSION SETA 526" --list=.\listings\startup.lst keil_ejemplo_
perifericos\keil_reversi\Startup.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 63 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 64 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 66 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 299 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 301 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

Stack_Top 00000880

Symbol: Stack_Top
   Definitions
      At line 66 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 251 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: Stack_Top used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 75 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 76 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 298 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 300 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 168 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 158 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: DAbt_Addr used once
DAbt_Handler 0000004C

Symbol: DAbt_Handler
   Definitions
      At line 176 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 168 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 176 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 171 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 162 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: FIQ_Addr used once
FIQ_Handler 00000054

Symbol: FIQ_Handler
   Definitions
      At line 178 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 171 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 178 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 170 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      None
Comment: IRQ_Addr unused
IRQ_Handler 00000050

Symbol: IRQ_Handler
   Definitions
      At line 177 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 170 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 177 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 167 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 157 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: PAbt_Addr used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

PAbt_Handler 00000048

Symbol: PAbt_Handler
   Definitions
      At line 175 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 167 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 175 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

PLL_Loop 0000007C

Symbol: PLL_Loop
   Definitions
      At line 210 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 212 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: PLL_Loop used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 145 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 164 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 154 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: Reset_Addr used once
Reset_Handler 00000058

Symbol: Reset_Handler
   Definitions
      At line 184 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 164 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 183 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

SWI_Addr 00000028

Symbol: SWI_Addr
   Definitions
      At line 166 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 156 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: SWI_Addr used once
SWI_Handler 00000044

Symbol: SWI_Handler
   Definitions
      At line 174 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 166 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 174 in file keil_ejemplo_perifericos\keil_reversi\Startup.s




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 165 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 155 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: Undef_Addr used once
Undef_Handler 00000040

Symbol: Undef_Handler
   Definitions
      At line 173 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 165 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 173 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

Vectors 00000000

Symbol: Vectors
   Definitions
      At line 154 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      None
Comment: Vectors unused
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 292 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      None
Comment: .text unused
PLL_Loop2 00000038

Symbol: PLL_Loop2
   Definitions
      At line 317 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 319 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: PLL_Loop2 used once
Switch_to_PLL 00000014

Symbol: Switch_to_PLL
   Definitions
      At line 305 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 304 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: Switch_to_PLL used once
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 296 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 295 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: __user_initial_stackheap used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000000

Symbol: ABT_Stack_Size
   Definitions
      At line 55 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 61 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 261 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

FIQ_Stack_Size 00000000

Symbol: FIQ_Stack_Size
   Definitions
      At line 56 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 61 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 266 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 41 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 254 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 259 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 264 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 269 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 279 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 73 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 76 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 300 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

IRQ_Stack_Size 00000080

Symbol: IRQ_Stack_Size
   Definitions
      At line 57 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 61 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 271 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 40 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 254 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 259 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 264 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 269 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 279 in file keil_ejemplo_perifericos\keil_reversi\Startup.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


MAMCR_OFS 00000000

Symbol: MAMCR_OFS
   Definitions
      At line 123 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 228 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: MAMCR_OFS used once
MAMCR_Val 00000002

Symbol: MAMCR_Val
   Definitions
      At line 138 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 227 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: MAMCR_Val used once
MAMTIM_OFS 00000004

Symbol: MAMTIM_OFS
   Definitions
      At line 124 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 226 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: MAMTIM_OFS used once
MAMTIM_Val 00000004

Symbol: MAMTIM_Val
   Definitions
      At line 139 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 225 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: MAMTIM_Val used once
MAM_BASE E01FC000

Symbol: MAM_BASE
   Definitions
      At line 122 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 224 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: MAM_BASE used once
MAM_SETUP 00000001

Symbol: MAM_SETUP
   Definitions
      At line 137 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 223 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: MAM_SETUP used once
MEMMAP E01FC040

Symbol: MEMMAP
   Definitions
      At line 233 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      None
Comment: MEMMAP unused
Mode_ABT 00000017




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: Mode_ABT
   Definitions
      At line 36 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 259 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 33 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 264 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 34 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 269 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 35 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 279 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 38 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 37 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 254 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 32 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 274 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: Mode_USR used once
PLLCFG_MSEL 0000001F

Symbol: PLLCFG_MSEL
   Definitions
      At line 105 in file keil_ejemplo_perifericos\keil_reversi\Startup.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: PLLCFG_MSEL unused
PLLCFG_OFS 00000004

Symbol: PLLCFG_OFS
   Definitions
      At line 100 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 203 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 311 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

PLLCFG_PSEL 00000060

Symbol: PLLCFG_PSEL
   Definitions
      At line 106 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      None
Comment: PLLCFG_PSEL unused
PLLCFG_Val 00000024

Symbol: PLLCFG_Val
   Definitions
      At line 118 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 202 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 310 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

PLLCON_OFS 00000000

Symbol: PLLCON_OFS
   Definitions
      At line 99 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 205 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 216 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 313 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 322 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

PLLCON_PLLC 00000002

Symbol: PLLCON_PLLC
   Definitions
      At line 104 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 215 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 321 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

PLLCON_PLLE 00000001

Symbol: PLLCON_PLLE
   Definitions
      At line 103 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 204 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 215 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 312 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 321 in file keil_ejemplo_perifericos\keil_reversi\Startup.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols


PLLFEED_OFS 0000000C

Symbol: PLLFEED_OFS
   Definitions
      At line 102 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 206 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 207 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 217 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 218 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 314 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 315 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 323 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 324 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

PLLSTAT_OFS 00000008

Symbol: PLLSTAT_OFS
   Definitions
      At line 101 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 210 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 317 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

PLLSTAT_PLOCK 00000400

Symbol: PLLSTAT_PLOCK
   Definitions
      At line 107 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 211 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 318 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

PLL_BASE E01FC080

Symbol: PLL_BASE
   Definitions
      At line 98 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 197 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 306 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

PLL_SETUP 00000001

Symbol: PLL_SETUP
   Definitions
      At line 117 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 196 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: PLL_SETUP used once
SVC_Stack_Size 00000400

Symbol: SVC_Stack_Size
   Definitions
      At line 54 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 61 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 281 in file keil_ejemplo_perifericos\keil_reversi\Startup.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols


Stack_Size 00000880

Symbol: Stack_Size
   Definitions
      At line 61 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 64 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 66 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

UND_Stack_Size 00000000

Symbol: UND_Stack_Size
   Definitions
      At line 53 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 61 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 256 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

USR_Stack_Size 00000400

Symbol: USR_Stack_Size
   Definitions
      At line 58 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 61 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 276 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
      At line 299 in file keil_ejemplo_perifericos\keil_reversi\Startup.s

VPBDIV E01FC100

Symbol: VPBDIV
   Definitions
      At line 80 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      None
Comment: VPBDIV unused
VPBDIV_SETUP 00000000

Symbol: VPBDIV_SETUP
   Definitions
      At line 93 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 188 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: VPBDIV_SETUP used once
VPBDIV_Val 00000000

Symbol: VPBDIV_Val
   Definitions
      At line 94 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      None
Comment: VPBDIV_Val unused
39 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

__main 00000000

Symbol: __main
   Definitions
      At line 286 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      At line 287 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 294 in file keil_ejemplo_perifericos\keil_reversi\Startup.s
   Uses
      None
Comment: __use_two_region_memory unused
2 symbols
405 symbols in table
